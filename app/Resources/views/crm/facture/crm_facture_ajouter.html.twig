{% extends 'crm/crm_layout.html.twig' %}

{% block content %}

	<div class="row">
		<div class="col-md-12">
			<h1>Créer une facture</h1>	
		</div>
	</div>

	{% set action = "ajouter" %}
	{% include 'crm/facture/crm_facture_form.html.twig' %}

{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script type="text/javascript">

		// ajoute un lien « add a produit »
		var $addProduitLink = $('<a href="#" class="add_produit_link btn btn-xs btn-success"><span class="glyphicon glyphicon-plus"</a>');
		var $newProduitLi = $('<li></li>').append($addProduitLink);
	
		$(document).ready( function () {   

			// Récupère le div qui contient la collection de tags
			var collectionHolder = $('ul.produits');
			// ajoute l'ancre « ajouter un tag » et li à la balise ul
			collectionHolder.append($newProduitLi);
			// Récupèrer le nombre de produits pour l'incrémenter et éviter le bug du jeu de suppression
			indexNewCollection = collectionHolder.children().length;

			addProduitForm(collectionHolder, $newProduitLi, false);
			$('.select_andor').addClass('visibility-hidden');
			
			$addProduitLink.on('click', function(e) {
				// empêche le lien de créer un « # » dans l'URL
				e.preventDefault();
			    // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
			    addProduitForm(collectionHolder, $newProduitLi, true);

			});

		    function addProduitForm(collectionHolder, $newLinkLi, ExecTinymceCommand) {
		        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
		        var prototype = collectionHolder.attr('data-prototype');
	
		        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
		        // Toujours incrémenter pour éviter la duplication des noms/ids
		        indexNewCollection++;		        
		        // la longueur de la collection courante
		        var newForm = prototype.replace(/__name__/g, indexNewCollection);
	
		        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
		        var $newFormLi = $('<li></li>').append(newForm);
		        $newLinkLi.before($newFormLi);
		        // Pour ne pas exécuter la commande dans la 1ère collection de l'ajout
				if( ExecTinymceCommand ) tinyMCE.execCommand("mceAddControl",false, $($newFormLi).find('textarea').attr("id"));

				// "unbind" puis "on..." pour éviter la double exécution de l'événement
				$('.remove-button').unbind('click');
		        $('.remove-button').on('click', function(e) {
		            // empêche le lien de créer un « # » dans l'URL
		            e.preventDefault();
		            // supprime l'élément li pour le formulaire de tag
		            $(this).parents('li').remove();
		        });

		        $('.produit-quantite').unbind('change');
		        $('.produit-quantite').change(function(){
			    	updateMontant(this);
			    	updateTotaux(this);
				});

			    $('.produit-tarif').unbind('change');
			    $('.produit-tarif').change(function(){
			    	updateMontant(this);
			    	updateTotaux(this);
				});

			    $('.produit-remise').unbind('change');
			    $('.produit-remise').change(function(){
			    	updateTotaux(this);
				});

			    $('.produit-type').unbind('change');
			    $('.produit-type').change(function(){
			    	updateProduitType();
				});
		    	
		      //  addProduitFormDeleteLink($newFormLi);
	
		        $('.select_action').unbind('change');
		        $('.select_action').change(function() {
					if($(this).val() == 'EMPTY' || $(this).val() == 'NOT_EMPTY'){
						$(this).parent().next().find('.input_valeur').prop('disabled', true);
					} else {
						$(this).parent().next().find('.input_valeur').prop('disabled', false);	
					}
				});
		    }

		    $('.remove-button').on('click', function(e) {
	            // empêche le lien de créer un « # » dans l'URL
	            e.preventDefault();
	            // supprime l'élément li pour le formulaire de tag
	            $(this).parents('li').remove();
	        });

		    $('.produit-type').change(function(){
		    	updateProduitType();
			});

		    $('.produit-quantite').change(function(){
		    	updateMontant(this);
			});

		    $('.produit-tarif').change(function(){
		    	updateMontant(this);
			});

		    $('.produit-remise').change(function(){
		    	updateTotaux(this);
			});

		    $('.facture-remise').change(function(){
		    	updatefactureTotaux();
			});

		    $('.facture-taxe-percent').change(function(){
		    	updateTaxe();
			});

		    function updateProduitType(){

				var hasFC = false;
		    	
		    	$.each($('.produit-type'), function( index, value ) {
		    		var id = $(this).attr('id');
		    		var selector = $('#'+id+' option:selected');
			    	if(selector.text() == 'FC'){
			    		hasFC = true;
				    }
		    	});
			    
		    	if(hasFC){
		    		$('.facture-taxe-percent').prop('disabled', true);
		    		$('.fc-taxe-hidden').removeClass('hidden');
		    		$('.facture-taxe-percent').val(null);
		    		$('.facture-taxe-montant').val(null);
			    } else {
			    	$('.facture-taxe-percent').prop('disabled', false);
			    	$('.fc-taxe-hidden').addClass('hidden');
				}
		    }
		    
	        function updateMontant(element){
				var quantite = $(element).parents('li').find('.produit-quantite').val();
				quantite = quantite.replace(",", "."); 
				$(element).parents('li').find('.produit-quantite').val(quantite);
				
				var tarif = $(element).parents('li').find('.produit-tarif').val();
				tarif = tarif.replace(",", "."); 
				$(element).parents('li').find('.produit-tarif').val(tarif);
				
				var montant = quantite*tarif;
				if(montant<0){
					montant = 0;
				}
				$(element).parents('li').find('.produit-montant').val(montant.toFixed(2));

				updateTotaux(element);
		    };

		    function updateTotaux(element){

		    	//Total produit
				var remise = $(element).parents('li').find('.produit-remise').val();
				remise = remise.replace(",", "."); 
				$(element).parents('li').find('.produit-remise').val(remise);
				
				var montant = $(element).parents('li').find('.produit-montant').val();
				montant = montant.replace(",", "."); 
				$(element).parents('li').find('.produit-montant').val(montant);

				var produitTotal = montant-remise;
				if(produitTotal<0){
					produitTotal = 0;
				}
				$(element).parents('li').find('.produit-total').val(produitTotal.toFixed(2));

				updatefactureTotaux();
				
			};

			function updatefactureTotaux(){
				//Sous total
				var sousTotal = 0;
				$.each($('.produit-total'), function( index, value ) {
					  var val = $(value).val();
					  sousTotal = +sousTotal + +val;
				});
				$('.facture-sous-total').val(sousTotal.toFixed(2));

				//Total HT
				var factureRemise = $('.facture-remise').val();
				factureRemise = factureRemise.replace(",", "."); 
				$('.facture-remise').val(factureRemise);
				
				var totalHT = sousTotal-factureRemise;
				$('.facture-total-ht').val(totalHT.toFixed(2));


				updateTaxe();
			}

			function updateTaxe(){
				var totalHT = $('.facture-total-ht').val();
				var taxePercent = $('.facture-taxe-percent').val();
				taxePercent = taxePercent.replace(",", "."); 
				$('.facture-taxe-percent').val(taxePercent);

				if(taxePercent != 0){
					//Montant Taxe
					//var taxePercent = taxePercent.replace("%", "");
					var taxeMontant = taxePercent/100*totalHT;
					taxeMontant = taxeMontant.toFixed(2);
				} else {
					var taxeMontant = "";
				}
				
				$('.facture-taxe').val(taxeMontant);

				//Total TTC
				var totalTTC = +totalHT + +taxeMontant;
				$('.facture-total-ttc').val(totalTTC.toFixed(2));
			}	

		});
	</script>
{% endblock %}
