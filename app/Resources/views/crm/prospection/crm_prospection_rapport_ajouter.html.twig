{% extends 'crm/crm_layout.html.twig' %}

{% block content %}


	<div class="row">
		<div class="col-md-12">
			<h1>Campagne de prospection : {{ prospection.nom }}</h1>
			<h3>Ajouter depuis la CRM</h3>	
		</div>
	</div>
	
	<div class="row">
		<div class="col-md-12">
			{{ form_start(form, { 'attr': {'class': 'form-inline form-filter'}}) }}
		    <h3>Filtres</h3>
			<ul id="collectionContainer" class="filters" data-prototype="
				{% filter escape %}
				    {{ include('crm/rapport/crm_rapport_filtre_form.html.twig', { 'form':  form.filtres.vars.prototype }) }}
			    {% endfilter %}">
				{% for filterField in form.filtres %}
					<li>
						{{ include('crm/rapport/crm_rapport_filtre_form.html.twig', { 'form': filterField }) }}
					</li>
				{% endfor %}
			</ul>
			{{ form_rest(form) }}

			<br/>
			<br/>
			<br/>

			<input type="submit" value="Créer la liste" class="btn btn-success" />


			{{ form_end(form) }}
		 </div>
	</div>

{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script type="text/javascript">

		// ajoute un lien « add a filter »
		var $addFilterLink = $('<a href="#" class="add_filter_link btn btn-xs btn-success"><span class="glyphicon glyphicon-plus"</a>');
		var $newLinkLi = $('<li></li>').append($addFilterLink);
	
		$(document).ready( function () {
			$("body").on("click", ".btn-rapport-add-separateur", function(e){
				// empêche le lien de créer un « # » dans l'URL
				e.preventDefault();
				// supprimele filtre
				$(this).parents('li').append('<hr />');
				$(this).parents('li').find('.end-group-hidden').val(1);

			});
			// Récupère le div qui contient la collection de tags
			var collectionHolder = $('ul.filters');
			// ajoute l'ancre « ajouter un tag » et li à la balise ul
			collectionHolder.append($newLinkLi);

			addFilterForm(collectionHolder, $newLinkLi);
//			$('.select_andor').addClass('visibility-hidden');

			$addFilterLink.on('click', function(e) {
				// empêche le lien de créer un « # » dans l'URL
				e.preventDefault();
			    // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
			    addFilterForm(collectionHolder, $newLinkLi);

			});


		    function addFilterForm(collectionHolder, $newLinkLi) {
		        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
		        var prototype = collectionHolder.attr('data-prototype');

		        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
		        // la longueur de la collection courante
		        var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

		        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
		        var $newFormLi = $('<li></li>').append(newForm);
		        $newLinkLi.before($newFormLi);

		        addFilterFormDeleteLink($newFormLi);

		        $('.select_action').change(function() {
					if($(this).val() == 'EMPTY' || $(this).val() == 'NOT_EMPTY'){
						$(this).parent().next().find('.input_valeur').prop('disabled', true);
					} else {
						$(this).parent().next().find('.input_valeur').prop('disabled', false);
					}
				});
		    }

	    function addFilterFormDeleteLink($filterFormLi) {
		        var $removeFormA = $('<a href="#" class="btn btn-xs btn-danger"><span class="glyphicon glyphicon-minus"></span></a>');
		        $filterFormLi.append($removeFormA);

		        $removeFormA.on('click', function(e) {
		            // empêche le lien de créer un « # » dans l'URL
		            e.preventDefault();

		            // supprime l'élément li pour le formulaire de tag
		            $filterFormLi.remove();
		        });
		    }



		});



	</script>













{% endblock %}
