{% block content %}

    {{ form_start(form) }}
    <div class="row">

        <div class="col-md-12">
            {{ form_errors(form) }}
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            {{ form_row(form.nom) }}
            {{ form_row(form.date) }}
        </div>
        <div class="col-md-6">
            {{ form_row(form.userGestion) }}
            {{ form_row(form.dateValidite) }}
        </div>
    </div>

    <hr />

    <div class="row">
        <div class="col-md-6">
            <div class="typeahead-container" style="margin-bottom: 15px;">
                <div class="typeahead-field">
                    <span class="typeahead-query">
                        {{ form_label(form.compte_name) }}
                        <span class="fc-taxe-hidden">(doit avoir été créée au préalable)</span>
                        {{ form_errors(form.compte_name) }}
                        {{ form_widget(form.compte_name, {'attr' : {'class' : 'typeahead-compte'}}) }}
                        {{ form_row(form.compte) }}
                    </span>
                </div>
            </div>
        </div>
        <div class="col-md-6">

            <div class="typeahead-container">
                <div class="typeahead-field">
                    <span class="typeahead-query">
                        {{ form_row(form.contact_name, {'attr' : {'class' : 'typeahead-contact'}}) }}
                        {{ form_row(form.contact) }}
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            {{ form_row(form.adresse) }}
            {{ form_row(form.codePostal) }}
        </div>
        <div class="col-md-6">
            {{ form_row(form.ville) }}
            {{ form_row(form.region) }}
            {{ form_row(form.pays) }}
        </div>
    </div>

    <hr />

    <div class="row">

       <div class="col-md-6">
            {{ form_row(form.type) }}
            {{ form_row(form.analytique) }}
            {{ form_row(form.probabilite) }}
        </div>


        <div class="col-md-6">
            {{ form_row(form.origine) }}
            {{ form_row(form.priveOrPublic) }}
            {{ form_row(form.appelOffre) }}
        </div>
    </div>

   <div class="row">
        <div class="col-md-12">

             <ul class="produits" id="collectionContainer" data-prototype="
             {% filter escape %}
                    {{ include('crm/produit/crm_produit_form.html.twig', { 'form':  form.produits.vars.prototype }) }}
             {% endfilter %}">
             {% for produitField in form.produits %}
                <li>
                    {{ include('crm/produit/crm_produit_form.html.twig', { 'form': produitField }) }}
                </li>
            {% endfor %}
            </ul>

        </div>
   </div>

   <div class="row">
        <div class="col-md-12" id="devis-calcul-wrapper">
        <hr />
            {{ form_row(form.sousTotal) }}
            {{ form_row(form.remise) }}
            {{ form_row(form.totalHT) }}
            <div id="devis-taxe-wrapper">
                {{ form_row(form.taxePercent) }}
                    {{ form_row(form.taxe) }}
            </div>
            <p class="fc-taxe-hidden hidden">Vous ne pouvez pas taxer les produits de type FC.</p>
            {{ form_row(form.totalTTC) }}
            <hr />
       </div>
   </div>

   <div class="row">
       <div class="col-md-12">
            {{ form_row(form.cgv) }}
            {{ form_row(form.description) }}
        </div>
   </div>

    <div class="row">
        <div class="col-md-12">
            <input type="submit" value="Enregistrer" class="btn btn-success" onclick="return confirmationTVA()"/>
        </div>
    </div>
</div>
{{ form_end(form) }}
{% endblock %}

{% block javascripts %}
<script type="text/javascript">

    // function calculateCA() {
    //     var montant = $(".opp-montant").val();

    //     montant = montant.replace(",", ".");
    //     $(".opp-montant").val(montant);

    //     var s_proba = $(".opp-probabilite option:selected").text();
    //     var arr_proba = s_proba.split('-');
    //     var proba = arr_proba[1].replace('%', '');
    //     var caAttendu = montant * (proba / 100);
    //     caAttendu = caAttendu.toFixed(2);
    //     $(".opp-ca-attendu").val(caAttendu);
    // }

    $(document).ready(function() {

        // ajoute un lien « add a produit »
        var $addProduitLink = $('<a href="#" class="add_produit_link btn btn-xs btn-success"><span class="glyphicon glyphicon-plus"</a>');
        var $newProduitLi = $('<li></li>').append($addProduitLink);


        $('.typeahead-compte').typeahead({
            order: "desc",
            accent: true,
            source: {
                url: Routing.generate("crm_compte_get_liste")
            },
            callback: {
                onClickAfter: function(node, a, item, event) {
                    $('.entity-compte').val(item.id);
                    changeAddress();
                }
            },
            debug: true

        });


        $('.typeahead-contact').typeahead({
            order: "desc",
            accent: true,
            source: {
                url: Routing.generate('crm_contact_get_liste', {'compte_id' : null })
            },
            callback: {

                onClickAfter: function(node, a, item, event) {
                    console.log('Typeahead Click on ' + node.selector);
                    $('.entity-contact').val(item.id);
                }
            },
            debug: true

        });

                // Récupère le div qui contient la collection de tags
                var collectionHolder = $('ul.produits');
                // ajoute l'ancre « ajouter un tag » et li à la balise ul
                collectionHolder.append($newProduitLi);
                // Récupèrer le nombre de produits pour l'incrémenter et éviter le bug du jeu de suppression
                indexNewCollection = collectionHolder.children().length;
                
                if($('.produit-tarif').length > 0){
                
                    $.each($('.produit-tarif'), function( index, value ) {
                        updateMontant(this);
                    });

                } else if($('.produit-tarif').length == 0){

                    addProduitForm(collectionHolder, $newProduitLi, false);
                    $('.select_andor').addClass('visibility-hidden');
                    
                    $addProduitLink.on('click', function(e) {
                        // empêche le lien de créer un « # » dans l'URL
                        e.preventDefault();
                        // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
                        addProduitForm(collectionHolder, $newProduitLi, true);

                    });
                    
                }

                function addProduitForm(collectionHolder, $newLinkLi, ExecTinymceCommand) {
                    // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
                    var prototype = collectionHolder.attr('data-prototype');
        
                    // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
                    // Toujours incrémenter pour éviter la duplication des noms/ids
                    indexNewCollection++;   
                    var newForm = prototype.replace(/__name__/g, indexNewCollection);
        
                    // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
                    var $newFormLi = $('<li></li>').append(newForm);
                    $newLinkLi.before($newFormLi);
                    // Pour ne pas exécuter la commande dans la 1ère collection de l'ajout
                    if( ExecTinymceCommand ) tinyMCE.execCommand("mceAddControl",false, $($newFormLi).find('textarea').attr("id"));

                    $('.remove-button').unbind('click');
                    $('.remove-button').on('click', function(e) {
                        // empêche le lien de créer un « # » dans l'URL
                        e.preventDefault();
                        // supprime l'élément li et le tinymce pour le formulaire de tag
                        tinyMCE.execCommand("mceRemoveControl",false, $(this).parents('li').find('textarea').attr("id"));
                        $(this).parents('li').remove();
                    });

                    $('.produit-quantite').unbind('change');
                    $('.produit-quantite').change(function(){
                        updateMontant(this);
                        updateTotaux(this);
                    });

                    $('.produit-tarif').unbind('change');
                    $('.produit-tarif').change(function(){
                        updateMontant(this);
                        updateTotaux(this);
                    });

                    $('.produit-remise').unbind('change');
                    $('.produit-remise').change(function(){
                        updateTotaux(this);
                    });

                    $('.produit-type').unbind('change');
                    $('.produit-type').change(function(){
                        updateProduitType();
                    });
                    
                  //  addProduitFormDeleteLink($newFormLi);
        
                    $('.select_action').unbind('change');
                    $('.select_action').change(function() {
                        if($(this).val() == 'EMPTY' || $(this).val() == 'NOT_EMPTY'){
                            $(this).parent().next().find('.input_valeur').prop('disabled', true);
                        } else {
                            $(this).parent().next().find('.input_valeur').prop('disabled', false);
                        }
                    });
                }

                $('.remove-button').on('click', function(e) {
                    // empêche le lien de créer un « # » dans l'URL
                    e.preventDefault();
                    // supprime l'élément li et le tinymce pour le formulaire de tag
                    tinyMCE.execCommand("mceRemoveControl",false, $(this).parents('li').find('textarea').attr("id"));
                    $(this).parents('li').remove();
                });

                $('.produit-quantite').change(function(){
                    updateMontant(this);
                });

                $('.produit-tarif').change(function(){
                    updateMontant(this);
                });

                $('.produit-remise').change(function(){
                    updateTotaux(this);
                });

                $('.devis-remise').change(function(){
                    updateDevisTotaux();
                });

                $('.devis-taxe-percent').change(function(){
                    updateTaxe();
                });

                $('.produit-type').change(function(){
                    updateProduitType();
                });

                function updateProduitType(){

                    var hasFC = false;
                    
                    $.each($('.produit-type'), function( index, value ) {
                        var id = $(this).attr('id');
                        var selector = $('#'+id+' option:selected');
                        if(selector.text() == 'FC'){
                            hasFC = true;
                        }

                        $(".devis-analytique option").filter(function() {
                            //may want to use $.trim in here
                            return $(this).text() == selector.text(); 
                        }).prop('selected', true);
        
                    });
                    
                    if(hasFC){
                        $('.devis-taxe-percent').prop('disabled', true);
                        $('.devis-taxe-percent').val(null);
                        $('.fc-taxe-hidden').removeClass('hidden');
                        $('.devis-taxe-montant').val(null);
                    } else {
                        $('.devis-taxe-percent').prop('disabled', false);
                        $('.fc-taxe-hidden').addClass('hidden');
                    }


                }

                function updateMontant(element){
                    var quantite = $(element).parents('li').find('.produit-quantite').val();
                    quantite = quantite.replace(",", "."); 
                    $(element).parents('li').find('.produit-quantite').val(quantite);
                    
                    var tarif = $(element).parents('li').find('.produit-tarif').val();
                    tarif = tarif.replace(",", "."); 
                    $(element).parents('li').find('.produit-tarif').val(tarif);
                    
                    var montant = quantite*tarif;
                    if(montant<0){
                        montant = 0;
                    }
                    $(element).parents('li').find('.produit-montant').val(montant.toFixed(2));

                    updateTotaux(element);
                };

                function updateTotaux(element){

                    //Total produit
                    var remise = $(element).parents('li').find('.produit-remise').val();
                    remise = remise.replace(",", "."); 
                    $(element).parents('li').find('.produit-remise').val(remise);
                    
                    var montant = $(element).parents('li').find('.produit-montant').val();
                    montant = montant.replace(",", "."); 
                    $(element).parents('li').find('.produit-montant').val(montant);

                    var produitTotal = montant-remise;
                    if(produitTotal<0){
                        produitTotal = 0;
                    }
                    $(element).parents('li').find('.produit-total').val(produitTotal.toFixed(2));

                    updateDevisTotaux();
                    
                };

                function updateDevisTotaux(){
                    //Sous total
                    var sousTotal = 0;
                    $.each($('.produit-total'), function( index, value ) {
                          var val = $(value).val();
                          sousTotal = +sousTotal + +val;
                    });
                    $('.devis-sous-total').val(sousTotal.toFixed(2));

                    //Total HT
                    var devisRemise = $('.devis-remise').val();
                    devisRemise = devisRemise.replace(",", "."); 
                    $('.devis-remise').val(devisRemise);
                    
                    var totalHT = sousTotal-devisRemise;
                    $('.devis-total-ht').val(totalHT.toFixed(2));


                    updateTaxe();
                }

                function updateTaxe(){
                    var totalHT = $('.devis-total-ht').val();
                    var taxePercent = $('.devis-taxe-percent').val();
                    taxePercent = taxePercent.replace(",", "."); 
                    $('.devis-taxe-percent').val(taxePercent);

                    if(taxePercent != 0){
                        //Montant Taxe
                        //var taxePercent = taxePercent.replace("%", "");
                        var taxeMontant = taxePercent/100*totalHT;
                        taxeMontant = taxeMontant.toFixed(2);
                    } else {
                        var taxeMontant = "";
                    }
                    
                    $('.devis-taxe').val(taxeMontant);

                    //Total TTC
                    var totalTTC = +totalHT + +taxeMontant;
                    $('.devis-total-ttc').val(totalTTC.toFixed(2));
                }   



       
            $("#{{ form.appelOffre.vars.id }}").change(function() {
            $("#{{ form.contact.vars.id }}").attr("required", $(this).is(':checked'));
            $("#{{ form.contact_name.vars.id }}").attr("required", $(this).is(':checked'));

            
        });
    });
    JqueryValidateFormName = $('form[name="{{ form.vars.id }}"]');

    function changeAddress(compteId) {

        if(compteId == null ){
          var url = Routing.generate("crm_compte_get_coordonnees_by_id",{'id':$('.entity-compte').val()});
        }
        else{
          var url = Routing.generate("crm_compte_get_coordonnees_by_id",{'id':compteId});
        }
        $.ajax({
            type: "POST",
            url: url,
            success: function(data) {
                if(data.secteur != ""){
                    var arr_childrens =  $(".input-secteur").children();
                    for(var i = 0; i < arr_childrens.length; i++){

                        if(arr_childrens[i].textContent  === data.secteur){
                            arr_childrens[i].setAttribute("selected","");
                        }

                    }
                }
                $(".input-adresse").val(data.adresse);
                $(".input-codepostal").val(data.codePostal);
                $(".input-ville").val(data.ville);
                $(".input-region").val(data.region);
                $(".input-pays").val(data.pays);
                $(".input-telephone").val(data.telephone);
                $(".input-fax").val(data.fax);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(jqXHR.status);
                console.log(textStatus);
                console.log(errorThrown);
            },
        });
    }

    /**
    *   Si la TVA est nulle, on demande confirmation avant de soumettre le formulaire (sauf si c'est du FC)
    **/
    function confirmationTVA(){

        var  answer = true;
        if($('.devis-taxe-percent').prop('disabled') == false){
            if($('.devis-taxe').val() == null || $('.devis-taxe').val() == "" || $('.devis-taxe').val() == 0){
                answer = confirm('Attention, vous n\'avez pas entré de TVA. Souhaitez-vous tout de même enregistrer ?');
            }
        }
        return answer;
    }
</script>

<script src="{{ asset('js/error.js') }}"></script>
{% endblock %}
