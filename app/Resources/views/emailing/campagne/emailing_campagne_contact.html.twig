{% extends 'emailing/emailing_layout.html.twig' %}

{% block content %}
	<div class="row">
	    <div class="col-md-12">
	    		<h1>Campagne : {{ campagne.nomCampagne }}</h1>
	    </div>
    </div>

	<div class="row">
		<div class="col-md-12">
			{% for flashMessage in app.session.flashbag.get('success') %}
			    <div class="alert alert-success">
			        {{ flashMessage }}
			    </div>
			{% endfor %}
			{% for flashMessage in app.session.flashbag.get('danger') %}
			    <div class="alert alert-danger">
			        {{ flashMessage }}
			    </div> 
			{% endfor %}
		</div> 
	</div>
	  
{{ form_start(form) }}
	<div class="row">
		<div class="col-md-12">
			{{ form_errors(form) }}
			<div class="row">
				<div class="col-md-12">
					{{ form_label(form.listesContact) }}<br />
					{{ form_widget(form.listesContact) }}
				</div>
			</div>
			<ul class="nouveauFilter" data-prototype="{{ form_widget(form.nouvelleListe.vars.prototype.children.filtres.vars.prototype)|e }}"></ul>
			<ul class="nouvelleListe" data-prototype="{{ form_widget(form.nouvelleListe.vars.prototype)|e }}"></ul>
		</div>
	</div>
    <input type="submit" value="Enregistrer" class="btn btn-success" />
    {{ form_end(form) }}

{% endblock %}
{% block javascripts %}
	{{ parent() }}
	<script type="text/javascript">

		// ajoute un lien « add a liste »
		var $addListeLink = $('<a href="#" class="add_nouvelleliste_link btn btn-xs btn-success"><span class="glyphicon glyphicon-plus"</a>');
		var $newLinkLi = $('<li></li>').append($addListeLink);
	
		$(document).ready( function () {  
			indexForm = 0  ;
			indexFiltre = 0  ;
			// Récupère le div qui contient la collection de tags
			var collectionHolder = $('ul.nouvelleListe');
			// ajoute l'ancre « ajouter un tag » et li à la balise ul
			collectionHolder.append($newLinkLi);

			//addListeForm(collectionHolder, $newLinkLi, false);
			
			
			$addListeLink.on('click', function(e) {
				// empêche le lien de créer un « # » dans l'URL
				e.preventDefault();
			    // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
			    addListeForm(collectionHolder, $newLinkLi, true);

			});

		    function addListeForm(collectionHolder, $newLinkLi, ExecTinymceCommand) {
		        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
		        var prototype = collectionHolder.attr('data-prototype');
	
		        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
		        // la longueur de la collection courante
		        //var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);
		        var newForm = prototype.replace(/__name__/g, indexForm);

				$this = $('ul.nouveauFilter');
				var prototype = $this.attr('data-prototype');
				//console.log(prototype);
				var newFilter = prototype.replace(/\[__name__\]\[filtres\]\[__name__\]/g, '['+indexForm+'][filtres][__name__]');
				newFilter = newFilter.replace(/__name___filtres___name__/g, indexForm+'_filtres___name__');




		        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
		        var $newFormLi = $('<li></li>').append('<h3>Liste de contact</h3>'+newForm+'<ul id="filtre'+indexForm+'" data-prototype="'+escape(newFilter)+'"></ul>');
		        $newLinkLi.before($newFormLi);
	
				addFilterForm(indexForm);
				indexForm++;
		        addListeFormDeleteLink($newFormLi);

		        // Pour ne pas exécuter la commande dans la 1ère collection de l'ajout
				if( ExecTinymceCommand ) tinyMCE.execCommand("mceAddControl",false, $($newFormLi).find('textarea').attr("id"));
	
		    }
	
			function addFilterForm(indexForm) {
				$this = $('ul#filtre'+indexForm);

				var prototype = $this.attr('data-prototype');
				//console.log(prototype);

				var newForm = prototype.replace(/__name__/g, indexFiltre);
				$this.append('<li id="filtre-'+indexForm+'-'+indexFiltre+'"><h3>Filtres</h3>'+unescape(newForm)+'</li>');
				$('li#filtre-'+indexForm+'-'+indexFiltre+' .select_andor').addClass('visibility-hidden');

				addFilterFormDeleteLink($('ul#filtre'+indexForm+' li').last());

				var $addFilterLink = $('<a href="#" class="add_nouvelleliste_link btn btn-xs btn-success"><span class="glyphicon glyphicon-plus"</a>');
				var $newFilterLi = $('<li></li>').append($addFilterLink);

				$('ul#filtre'+indexForm).append($newFilterLi);
		        $('.select_action').change(function() {
					if($(this).val() == 'EMPTY' || $(this).val() == 'NOT_EMPTY'){
						$(this).parent().next().find('.input_valeur').prop('disabled', true);
					} else {
						$(this).parent().next().find('.input_valeur').prop('disabled', false);
					}
				});
				$addFilterLink.on('click', function(e) {
					// empêche le lien de créer un « # » dans l'URL
					e.preventDefault();
					// ajoute un nouveau formulaire tag (voir le prochain bloc de code)
					addNewFilterForm(indexForm, $newFilterLi);

				});
				indexFiltre++;
				//console.log(newForm);
			}
	

			function addNewFilterForm(indexForm, $newFilterLi){
				$this = $('ul#filtre'+indexForm);
				var prototype = $this.attr('data-prototype');
				//console.log(prototype);
				var newForm = prototype.replace(/\[__name__\]\[filtres\]\[__name__\]/g, '['+indexForm+'][filtres][__name__]');
				newForm = newForm.replace(/__name___filtres___name__/g, indexForm+'_filtres___name__');
				newForm = newForm.replace(/__name__/g, indexFiltre);
				
				//$target.last().html('<ul class="filters"><li>'+unescape(newForm)+'</li></ul>');
				//alert($this.find('li').length);
				
				$newFilterLi.before('<li id="filtre-'+indexForm+'-'+indexFiltre+'">'+unescape(newForm)+'</li>');
				if( $newFilterLi.parent().find('li:first-child').find('h3').length == 0 )
				{
					$newFilterLi.parent().find('li:first-child').prepend('<h3>Filtres</h3>');
					$newFilterLi.parent().find('li:first-child').find('.select_andor').addClass('visibility-hidden');
				}
				addFilterFormDeleteLink($('li#filtre-'+indexForm+'-'+indexFiltre));
				indexFiltre++;
			}


		    function addListeFormDeleteLink($filterFormLi) {

		        var $removeFormA = $('<a href="#" class="btn btn-xs btn-danger"><span class="glyphicon glyphicon-minus"></span></a>');
		        $filterFormLi.append($removeFormA);
	
		        $removeFormA.on('click', function(e) {
		            // empêche le lien de créer un « # » dans l'URL
		            e.preventDefault();
	
		            // supprime l'élément li pour le formulaire de tag
					tinyMCE.execCommand("mceRemoveControl",false, $(this).parents('li').find('textarea').attr("id"));
		            $filterFormLi.remove();
		        });
		    }

		    function addFilterFormDeleteLink($filterFormLi) {

		        var $removeFormA = $('<a href="#" class="btn btn-xs btn-danger"><span class="glyphicon glyphicon-minus"></span></a>');
		        $filterFormLi.append($removeFormA);
	
		        $removeFormA.on('click', function(e) {
		            // empêche le lien de créer un « # » dans l'URL
		            e.preventDefault();
					//alert($filterFormLi.parent().find('li').length);
					var $ul = $filterFormLi.parent();
					//alert( $filterFormLi.parent().find('li:first-child').find('h3').html());
		            // supprime l'élément li pour le formulaire de tag
		            $filterFormLi.remove();
					if( $ul.find('li:first-child').find('h3').length == 0 && $ul.find('li').length > 1 )
					{
						$ul.find('li:first-child').prepend('<h3>Filtres</h3>');
						$ul.find('li:first-child').find('.select_andor').addClass('visibility-hidden');
					}
		        });
		    }

			   
			    
		});
	</script>
{% endblock %}
{% block additionalModals %}
<script>
	/* Create a fixed menu on scroll for /voir */
		$(document).ready(function() {
		var positionElementInPage = $('#campagne_details').offset().top;
		$(window).scroll(
			 function() {
			        if ($(window).scrollTop() >= positionElementInPage) {
			            // fixed
			            $('#compte_details').addClass("fixed-top");
			        } else {
			            // relative
			            $('#compte_details').removeClass("fixed-top");
			        }
			    }
		);
		});
</script>

{% endblock %}
