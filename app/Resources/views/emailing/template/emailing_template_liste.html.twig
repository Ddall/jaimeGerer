{% extends 'emailing/emailing_layout.html.twig' %}

{% block content %}
	<div class="row">
		<div class="col-md-12">
			<h1>Campagnes</h1>	 
		</div>
	</div>
		
	<div class="row">
		<div class="col-md-12">
		    <p>
		    	<a href="{{ path('crm_contact_ajouter') }}" class="btn btn-success">
		    		<span class="glyphicon glyphicon-plus"></span> Ajouter
		    	</a>
		    	<a href="#" class="btn btn-danger">
		    		<span class="glyphicon glyphicon-trash"></span> Supprimer
		    	</a>
		    	<a class="btn btn-info" href="{{ path('crm_contact_importer' )}}">Importer des contacts</a>
		    </p>

<script>
$(document).ready(function() {

$("* [rel='tooltip']").tooltip({
   html: true, 
   placement: 'top'
});

});
</script>


	    </div>
    </div>
    
	    <div class="row">
	    	<div class="col-md-12">
			    <table id="table_contact_list" class="table table-bordered table-striped">    
			    	<thead>        
			    		<tr>            
			    			<th>Nom</th>            
			    			<th>Compte et titre</th>
			    			<th>Ville, région et pays</th>  
			    			<th>Téléphone et email</th>  
			    			<th>Actions</th>         
			    		</tr>    
			    	</thead>    
			    	
			    </table>
			</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script type="text/javascript">
		$(document).ready( function () {    
			$('#table_contact_list').DataTable({
					"dom": 'T<"clear">lfrtip',
			        "oTableTools": {
			        	"sSwfPath": "/web/lib/datatables/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
			            "aButtons": [
			                {
			                    "sExtends": "csv",
			                    "sButtonText": "Excel",
			                    "mColumns": [ 0, 1, 2, 3 ],
			                    "sFileName": "contacts.csv"
			                },
			                {
			                    "sExtends": "pdf",
			                    "sButtonText": "PDF",
			                    "mColumns": [ 0, 1, 2, 3 ],
			                    "sFileName": "contacts.pdf",
			                    "sTitle": "Contacts"
			                },
			               
			            ]
			        },
					"language" : {                
						"url": "//cdn.datatables.net/plug-ins/1.10.7/i18n/French.json"            
					},
					"responsive": true,
					"processing": true,
				    "serverSide": true,
				    "ajax":{
		                url :Routing.generate("crm_contact_liste_ajax"), // json datasource
		                type: "post",  // method  , by default get
		            },
		            "columns": [
	                   { "data": "nom" },
	                   { "data": "compte_nom" },
	                   { "data": "region" },
	                   { "data": "telephoneFixe" },
	                   { "data": "email" },
	                ],
					fnDrawCallback: function () {
					  $( 'a', this.fnGetNodes() ).tooltip( {
						"delay": 0,
						"track": true,
						"fade": 250,
						"tooltipClass": 'btn',
					  } );
					},
					fnInitComplete: function () {
					  $( 'a', this.fnGetNodes() ).tooltip( {
						"delay": 0,
						"track": true,
						"fade": 250,
						"tooltipClass": 'btn',
					  } );
					},
	                "columnDefs": [
	                               {
	                                   "render": function ( data, type, row ) {
	                                       var s = '<a href="voir/'+row['id']+'">' ;
											if(row['prenom']){
												s+= row['prenom']+' ';
											}

	                                       s+= data+'</a>';
	                                       return s;
	                                   },
	                                   "targets": 0
	                               },
	                               {
	                                   "render": function ( data, type, row ) {
	                                       var s= '<a href="/crm/compte/voir/'+row['compte_id']+'">'+data+'</a>';
											if(row['titre']){
												s+='<br /><i>'+row['titre']+'</i>';
											}
											return s;
	 	                             	},
	                                   "targets": 1
	                               },
	                               {
	                                   // The `data` parameter refers to the data for the cell (defined by the
	                                   // `data` option, which defaults to the column being worked with, in
	                                   // this case `data: 0`.
	                                   "render": function ( data, type, row ) {
	                                      var s="";
	                                      var br = false;
											if(data){
												//s+=data;
												br = true;
											}
	                                      
											if(row['ville']){
												s+= row['ville'];
												br = true;
											}
											
											if(row['region']){
												s+= (br ? '<br />' : '') + row['region'];
												br = true;
											}
											
											if(row['pays']){
												s+= (br ? '<br />' : '') + row['pays'];
											}
											
	                                      return s;
	                                   },
	                                   "targets": 2
	                               },
	                               {
	                                   // The `data` parameter refers to the data for the cell (defined by the
	                                   // `data` option, which defaults to the column being worked with, in
	                                   // this case `data: 0`.
	                                   "render": function ( data, type, row ) {
	                                      var s="";
	                                      var br = false;
											if(data){
												s+=data;
												br = true;
											}
	                                      
											if(row['telephonePortable']){
												s+= (br ? '<br />' : '') + row['telephonePortable'];
												br = true;
											}
											
											if(row['email']){
												s+= (br ? '<br />' : '') + row['email'];
											}
											
	                                      return s;
	                                   },
	                                   "targets": 3
	                               },
	                               {
	                                   // The `data` parameter refers to the data for the cell (defined by the
	                                   // `data` option, which defaults to the column being worked with, in
	                                   // this case `data: 0`.
	                                   "render": function ( data, type, row ) {
	                                       return "<a href=\"voir/"+row['id']+"\" class=\"btn btn-xs btn-info\" ​data-toggle=\"tooltip\" title=\"Voir\"><span class=\"glyphicon glyphicon-eye-open\"></span></a>" +" "+
	                                    	"<a href=\"editer/"+row['id']+"\" class=\"btn btn-xs btn-warning\" ​data-toggle=\"tooltip\" title=\"Editer\"><span class=\"glyphicon glyphicon-pencil\"></span></a>" +" "+
	                                    	"<a href=\"supprimer/"+row['id']+"\" class=\"btn btn-xs btn-danger\" ​data-toggle=\"tooltip\" title=\"Supprimer\"><span class=\"glyphicon glyphicon-trash\"></span></a>";
	                                   },
	                                   "targets": 4
	                               },
	                               { "visible": false,  "targets": [ 'id' ] }
	                           ]
			});
		});
	</script>
{% endblock %}
