{% for mouvement in arr_mouvementsBancaires %}
	<tr id="{{ mouvement.id }}" class="mouvement">
		<td class="date">
			{{ mouvement.date|date('d/m/Y') }}
		</td>
		<td class="libelle">
			{{ mouvement.libelle }}
		</td>
		<td class="align-right montant">
			<span class="{{ mouvement.montant>=0 ? 'green' : 'red' }}">{{ mouvement.montant|number_format(2,',',' ') }} €</span>
			<span class="hidden">{{ mouvement.montant }}</span>
		</td>
		<td class="type">
			{% if mouvement.type is null %}
				<form>
					<select class="select-type form-control">
						{% if mouvement.montant >0 %}
							<option value=""></option>
							<option value="FACTURE">Facture</option>
							<option value="ACCOMPTE">Accompte</option>
							<option value="REMISE-CHEQUES">Remise de chèque</option>
							<option value="AVOIR-FOURNISSEUR">Avoir fournisseur</option>
							<option value="AFFECTATION-DIVERSE-VENTE">Affectation diverse vente</option>
						{% else %}
							<option value=""></option>
							<option value="DEPENSE">Dépense</option>
							<option value="AVOIR-CLIENT">Avoir</option>
							<option value="NOTE-FRAIS">Note de frais</option>
							<option value="AFFECTATION-DIVERSE-ACHAT">Affectation diverse achat</option>
						{% endif %}
					</select>
				</form>
			{% else %}
				<div>
				{% if mouvement.type == 'REMISE-CHEQUES' %}
					Remise de chèque
				{% elseif mouvement.type == 'DIVERS' %}
					Affectations diverses
				{% elseif mouvement.type == 'AVOIR-FOURNISSEUR' %}
					Avoir fournisseur
				{% elseif mouvement.type == 'AVOIR-CLIENT' %}
					Avoir
				{% elseif (mouvement.type == 'AFFECTATION-DIVERSE-ACHAT') or  (mouvement.type == 'AFFECTATION-DIVERSE-VENTE') %}
					Affectation diverse
				{% elseif mouvement.type == 'NOTE-FRAIS' %}
					Note de frais
				{% else %}
					{{ mouvement.type|capitalize }}
				{% endif %}
				</div>
				<div class="hidden">{{ mouvement.type }}</div>
			{% endif %}
		</td>
		<td class="piece">
			{% if mouvement.type is not null %}
				{% for rapprochement in mouvement.rapprochements %}
					{% if  mouvement.type == 'DEPENSE' %}
						<div><a href="{{  path("compta_depense_voir_modal", {'id' : rapprochement.depense.id }) }}" data-toggle="modal" data-target="#modal">{{ rapprochement.depense }}</a></div>
						<div class="hidden">{{ rapprochement.depense.id }}</div>
					{% elseif mouvement.type == 'FACTURE' %}
						<div><a href="{{  path("compta_facture_voir", {'id' : rapprochement.facture.id }) }}" data-toggle="modal" data-target="#modal">{{ rapprochement.facture.num }}</a> : {{ rapprochement.facture.totalTTC }} € TTC</div>
						<div class="hidden">{{ rapprochement.facture.id }}</div>
					{% elseif mouvement.type == 'ACCOMPTE' %}
						<div>{{ rapprochement.accompte }}</div>
						<div class="hidden">{{ rapprochement.accompte.id }}</div>
					{% elseif (mouvement.type == 'AVOIR-FOURNISSEUR') or (mouvement.type == 'AVOIR-CLIENT') %}
						<div>{{ rapprochement.avoir }}</div>
						<div class="hidden">{{ rapprochement.avoir.id }}</div>
					{% elseif (mouvement.type == 'REMISE-CHEQUES') %}
						<div>REMISE {{ rapprochement.remiseCheque }}</div>
						<div class="hidden">{{ rapprochement.remiseCheque.id }}</div>
					{% elseif (mouvement.type == 'NOTE-FRAIS') %}
						<div>{{ rapprochement.noteFrais }}</div>
						<div class="hidden">{{ rapprochement.noteFrais.id }}</div>
					{% elseif (mouvement.type == 'AFFECTATION-DIVERSE-ACHAT') or  (mouvement.type == 'AFFECTATION-DIVERSE-VENTE') %}
						<div>{{ rapprochement.affectationDiverse }}</div>
						<div class="hidden">{{ rapprochement.affectationDiverse.id }}</div>
					{% endif %}
				{% endfor %}
			{% endif %}
		</td>
		<td class="center validation">
			{% if mouvement.rapprochements|length > 0 %}
				<span class="glyphicon glyphicon-ok green"></span>
				<p class="hidden">{% for rapprochement in mouvement.rapprochements %}{{ rapprochement.id }}{% endfor %}</p>
			{% else %}
				<p class="red rapprochement-invalide hidden">
					Rapprochement invalide<br />
					<a class="help" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" title="Rapprochement invalide" data-content="Le montant du mouvement bancaire doit être égal au montant de la pièce à rapprocher." ><span class="glyphicon glyphicon-info-sign"></span></a>
				</p>

				<a class="btn btn-info btn-xs btn-rapprochement hidden"><span class="glyphicon glyphicon-check"></span></a>
				<div class="progress hidden">
			  		<div class="progress-bar progress-bar-striped active progress-bar-success" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
				</div>
				<div class="error red"></div>
			{% endif %}
		</td>
		<td class="actions">
			{% if mouvement.rapprochements|length == 0 %}
				{# <a href="{{ path('compta_mouvement_bancaire_scinder', {'id' : mouvement.id}) }}" class="btn btn-xs btn-primary" title="Scinder" data-toggle="modal" data-target="#modal-lg"><span class="glyphicon glyphicon-resize-full"></span></a>
				<a href="{{ path('compta_mouvement_bancaire_fusionner', {'id' : mouvement.id}) }}" class="btn btn-xs btn-primary" title="Fusionner" data-toggle="modal" data-target="#modal-lg"><span class="glyphicon glyphicon-resize-small"></span></a> #}
			{% else %}
				<a href="#" class="btn btn-xs btn-warning btn-unlock" title="Dévérouiller le rapprochement"><span class="glyphicon glyphicon-lock"></span></a>
			{% endif %}
		</td>
	</tr>
{% endfor %}

<script type="text/javascript">

	var forbidden = [];

	$(function () {
	  $('[data-toggle="popover"]').popover()
	})

	$(".mouvement").each(function() {
		var montant = $(this).children('.montant').children('.hidden').text();

		var libelle = $(this).children('.libelle').text();
		libelle = libelle.toLowerCase();

		if(montant > 0){
			if(libelle.indexOf('remise') != -1){
				//remise de cheque
				rapprochementAuto($(this), montant, "REMISE-CHEQUES", "#form-select-remise-cheques");
			} else {
				//facture
				rapprochementAuto($(this), montant, "FACTURE", "#form-select-factures");
			}
		} else {
			if(libelle.indexOf('note de frais') != -1 || libelle.indexOf('ndf') != -1){
				//note de frais
				rapprochementAuto($(this), montant, "NOTE-FRAIS", "#form-select-note-frais");
			} else{

				//dépense
				rapprochementAuto($(this), montant, "DEPENSE", "#form-select-depenses");
				$(this).find('.lien-nouvelle-depense').attr('href', Routing.generate('compta_depense_ajouter_modal', { 'mouvement_id':  $(this).attr('id')} ));
			}
		}
	});

	function rapprochementAuto(tr, montant, type, form_id){
		//remove minus sign
		if(montant < 0) {
			montant = montant.slice(1);
		}
		//fill the "type" select
		$(tr).find(".select-type").val(type);
		var form = $(form_id).html();
		$(tr).find(".select-type").parent().parent().next().html(form);
		$(tr).find(".select-type").parent().parent().next().on("change", "select", function(){
			var type = $(this).parent().parent().parent().find('.select-type').val();
			var montant = $(this).parents('tr').find('.montant .hidden').text();
			checkValue(this, type, montant);
		});

		//search for a matching price
		var tab = $(tr).find("select option");
		for(var i=0; i<tab.length;i++) {
			var t = tab[i].text;
			var val = tab[i].value;
			total = splitPieceToGetPrice(t);
			if (montant == +total && forbidden.indexOf(val) == -1) {
					tab[i].parentNode.value = val;
					$(tr).find('.btn-rapprochement').removeClass("hidden");
					forbidden.push(val);
					return;
			}
		}
	}

	function splitPieceToGetPrice(piece) {
		var arr = piece.split(':'),
			total;
		if ( arr.length > 1 ) {
			total = arr[arr.length-1];
			total = total.trim().slice(0, -2);
		} else {
			total = null;
		}

		return total;
	}

	$(".type").on("change", ".select-type", function(){

		if($(this).val() == ""){
			$(this).parent().parent().next().html("");
		} else {

			if($(this).val() == "FACTURE"){
				var form = $("#form-select-factures").html();
				$(this).parent().parent().next().html(form);
			} else if($(this).val() == "DEPENSE"){
				var form = $("#form-select-depenses").html();
			} else if($(this).val() == "ACCOMPTE"){
				var form = $("#form-select-accomptes").html();
			} else if($(this).val() == "AVOIR-FOURNISSEUR"){
				var form = $("#form-select-avoir-fournisseurs").html();
			} else if($(this).val() == "AVOIR-CLIENT"){
				var form = $("#form-select-avoir-clients").html();
			} else if($(this).val() == "REMISE-CHEQUES"){
				var form = $("#form-select-remise-cheques").html();
			} else if($(this).val() == "AFFECTATION-DIVERSE-VENTE"){
				var form = $("#form-select-affectation-diverse-vente").html();
			} else if($(this).val() == "AFFECTATION-DIVERSE-ACHAT"){
				var form = $("#form-select-affectation-diverse-achat").html();
			} else if($(this).val() == "NOTE-FRAIS"){
				var form = $("#form-select-note-frais").html();
			}

			$(this).parent().parent().next().html(form);
			$(this).parents('tr').find('.lien-nouvelle-depense').attr('href', Routing.generate('compta_depense_ajouter_modal', { 'mouvement_id': $(this).parents('tr').attr('id')} ));
			$(this).parent().parent().next().on("change", "select", function(){
				var type = $(this).parent().parent().parent().find('.select-type').val();
				var montant = $(this).parents('tr').find('.montant .hidden').text();
				checkValue(this, type, montant);
			});
			$(this).parent().parent().next().find('a').attr('id', "lien-add-depense-"+$(this).parents('tr').attr('id'));
		}

	});


	// Check "rapprochement"
	function checkValue(element, type, montant){

		var value_selected = $(element).find('option:selected').text(),
		id_selected = $(element).val(),
		price = splitPieceToGetPrice(value_selected);

		if ( price && id_selected ) {
			if ( Math.abs(parseFloat(montant)) === Math.abs(parseFloat(price)) ) {
				showPieceBtn(element);
			} else {
				hidePieceBtn(element);
			}
		}
		else if ( (type === 'AFFECTATION-DIVERSE-VENTE' && id_selected) || (type === 'AFFECTATION-DIVERSE-ACHAT' && id_selected) ) {
			showPieceBtn(element);
		}
		else {
			hidePieceBtn(element);
		}
	};


	function showPieceBtn(element){
		$(element).parents('tr').find('.btn-rapprochement').removeClass('hidden');
		$(element).parents('tr').find('.rapprochement-invalide').addClass('hidden');
	};

	function hidePieceBtn(element) {
		$(element).parents('tr').find('.btn-rapprochement').addClass('hidden');
		$(element).parents('tr').find('.rapprochement-invalide').removeClass('hidden');
	}

	$(".validation").on("click", ".btn-rapprochement", function(){

		var element = $(this);

		var type = $(this).parent().parent().find('.select-type').val();
		var id = $(this).parent().parent().attr('id');
		var piece = $(this).parent().prev().find('.form-control:not(.hidden)').val();

		$(this).addClass("hidden");
		$(this).parent().find('.progress').removeClass('hidden');

		$.ajax({
			type: "POST",
			url: Routing.generate('compta_mouvement_bancaire_rapprocher', { 'id':  id, 'type' : type, 'piece' : piece} ),
			success: function(data) {
				$(element).parent().parent().find('.select-type').addClass('hidden');
				$(element).parent().prev().find('.form-control:not(.hidden)').addClass('hidden');
				$(element).parent().find('.error').addClass('hidden');
				$(element).parent().find('.error').text('');

				$(element).parent().prev().html('<div>' + data.s_piece + '</div><div class="hidden">' + data.piece_id + '</div>');

				var s_type = '';
				if(type == 'FACTURE'){
					s_type = 'Facture';
				} else if(type == 'DEPENSE'){
					s_type = 'Dépense';
				} else if(type == 'ACCOMPTE'){
					s_type = 'Accompte';
				} else if(type == 'REMISE-CHEQUE'){
					s_type = 'Remise de chèque';
				} else if(type == 'DIVERS'){
					s_type = 'Affectation diverse';
				} else if(type == 'AVOIR-FOURNISSEUR'){
					s_type = 'Avoir fournisseur';
				} else if(type == 'AVOIR-CLIENT'){
					s_type = 'Avoir';
				} else if(type == 'REMISE-CHEQUES'){
					s_type = 'Remise de chèques';
				} else if(type == 'NOTE-FRAIS'){
					s_type = 'Note de frais';
				} else if(type == 'AFFECTATION-DIVERSE-VENTE' || type == 'AFFECTATION-DIVERSE-ACHAT' ){
					s_type = 'Affectation diverse';
				}
				$(element).parent().prev().prev().html('<div>' + s_type + '</div><div class="hidden">' + type + '</div>');

				//add unlock button
				$(element).parents('tr').find('.actions').html('<a href="#" class="btn btn-xs btn-warning btn-unlock" title="Dévérouiller le rapprochement"><span class="glyphicon glyphicon-lock"></span></a>');

				//change validation button to green checkmark
				$(element).parent().html('<span class="glyphicon glyphicon-ok green"></span>');

				//remove from selects if needed
				if(data.remove === true){
					removeFromSelect(type, data.piece_id);
				}
			},
			error: function(jqXHR, textStatus, errorThrown) {
				$(element).removeClass("hidden");
				$(element).parent().find('.progress').addClass('hidden');
				
				$(element).parent().find('.error').text(jqXHR.responseJSON.message);
				$(element).parent().find('.error').removeClass('hidden');
			},
		});

		function removeFromSelect(type, piece_id){
			console.log('removing !');
			var form_id = "#form-select-"+type.toLowerCase()+"s";
			$(form_id+" option").each(function() {
				if($(this).val() == piece_id){
					$(this).remove();
				}
			});

			var select_id = ".select-"+type.toLowerCase()+"s";
			$(select_id+" option").each(function() {
				if($(this).val() == piece_id){
					$(this).remove();
				}
			});
		}

	});

	$(".mouvement").on("click", ".btn-unlock", function(event) {
		event.preventDefault();

		var montant = $(this).parents('tr').find('.montant .hidden').text(),
			element_tr = $(this).parents('tr'),
			element_type = element_tr.find('.type'),
			type = element_type.find('.hidden').text(),
			element_piece = element_tr.find('.piece'),
			piece_id = element_tr.find('.piece .hidden').text(),
			piece_text = element_tr.find('.piece :not(.hidden)').text(),
			form_id = '#form-select-' + type.toLowerCase(),
			rapprochement_id = element_tr.find('.validation .hidden').text();

		if ( $.inArray(type, ['REMISE-CHEQUES', 'AFFECTATION-DIVERSE-VENTE', 'AFFECTATION-DIVERSE-ACHAT']) === -1 ) { form_id += 's'; }

		//delete the rapprochement entity
		 $.ajax({
	          type: "POST",
	          url: Routing.generate('compta_rapprochement_supprimer', {'id' : rapprochement_id}),
	          success: function(data)
	          {
		        	// Show type form
		      		if ( montant > 0 ) {
		      			element_type.html('<form>'+
		      									'<select class="select-type form-control">'+
		      										'<option value=""></option>'+
		      										'<option value="FACTURE">Facture</option>'+
		      										'<option value="ACCOMPTE">Accompte</option>'+
		      										'<option value="REMISE-CHEQUES">Remise de chèque</option>'+
		      										'<option value="AVOIR-FOURNISSEUR">Avoir fournisseur</option>'+
		      										'<option value="AFFECTATION-DIVERSE-VENTE">Affectation diverse vente</option>'+
		      									'</select>'+
		      								'</form>');
		      		} else {
		      			element_type.html('<form>'+
		      									'<select class="select-type form-control">'+
		      										'<option value=""></option>'+
		      										'<option value="DEPENSE">Dépense</option>'+
		      										'<option value="AVOIR-CLIENT">Avoir</option>'+
		      										'<option value="NOTE-FRAIS">Note de frais</option>'+
		      										'<option value="AFFECTATION-DIVERSE-ACHAT">Affectation diverse achat</option>'+
		      									'</select>'+
		      								'</form>');
		      		}

		      		//add to every form
		      		$(form_id+' select').append('<option value='+piece_id+'>'+piece_text+'</option>');

		      		// Set type form with default value
		      		element_type.find('option[value="' + type + '"]').attr('selected', true);

		      		// Show rapprochement form
		      		rapprochementAuto(element_tr, montant, type, form_id);
		      		$(element_tr).find('.piece select').val(piece_id);

		      		// remove buttons
		      		$(this).remove();

		      		//add the validation button
		      		$(element_tr).find('.validation').html('<p class="red rapprochement-invalide hidden">Rapprochement invalide<br /><a class="help" data-toggle="popover" data-trigger="hover" data-placement="top" data-container="body" title="Rapprochement invalide" data-content="Le montant du mouvement bancaire doit être égal au montant de la pièce à rapprocher." ><span class="glyphicon glyphicon-info-sign"></span></a></p>'+
		      		'<a class="btn btn-info btn-xs btn-rapprochement"><span class="glyphicon glyphicon-check"></span></a>');
	          }
	 	});

	});


</script>
