<div class="modal-header">
	<a class="close" data-dismiss="modal">×</a>
	<h3>Modifier une dépense</h3>
</div>

<div class="modal-body">
	{% set modal=true %}
	{% set action='edit-depense' %}
	{% include 'compta/depense/compta_depense_form.html.twig' %}
</div>

<script type="text/javascript">

	// ajoute un lien « add a produit »
	var $addProduitLink = $('<a href="#" class="add_produit_link btn btn-xs btn-success"><span class="glyphicon glyphicon-plus"</a>');
	var $newProduitLi = $('<li></li>').append($addProduitLink);

	$(document).ready( function () {    
		// Récupère le div qui contient la collection de tags
		var collectionHolder = $('ul.produits');
		// ajoute l'ancre « ajouter un tag » et li à la balise ul
		collectionHolder.append($newProduitLi);
		// Récupèrer le nombre de produits pour l'incrémenter et éviter le bug du jeu de suppression
		indexNewCollection = collectionHolder.children().length;


		$addProduitLink.on('click', function(e) {
			// empêche le lien de créer un « # » dans l'URL
			e.preventDefault();
		    // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
		    addProduitForm(collectionHolder, $newProduitLi, true);
			updatedepenseTotaux();
		});

		  $('.produit-montant').change(function(){
		    	updateTotal(this);
			});

		    $('.produit-taxe').change(function(){
		    	updateTotal(this);
			});
		    $('.produit-total').change(function(){
		    	updateMontant(this);
			});

			$.each($('.produit-montant'), function( index, value ) {
				updateTotal(this);
			});

	    function addProduitForm(collectionHolder, $newLinkLi, ExecTinymceCommand) {
	        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
	        var prototype = collectionHolder.attr('data-prototype');

	        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
	        // Toujours incrémenter pour éviter la duplication des noms/ids
	        indexNewCollection++;		        
	        // la longueur de la collection courante
	        var newForm = prototype.replace(/__name__/g, indexNewCollection);

	        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
	        var $newFormLi = $('<li></li>').append(newForm);
	        $newLinkLi.before($newFormLi);
	        // Pour ne pas exécuter la commande dans la 1ère collection de l'ajout
			if( ExecTinymceCommand ) tinyMCE.execCommand("mceAddControl",false, $($newFormLi).find('textarea').attr("id"));

			// "unbind" puis "on..." pour éviter la double exécution de l'événement
			$('.remove-button').unbind('click');
	        $('.remove-button').on('click', function(e) {
	            // empêche le lien de créer un « # » dans l'URL
	            e.preventDefault();
	            // supprime l'élément li pour le formulaire de tag
	            $(this).parents('li').remove();
				updatedepenseTotaux();
	        });

	      //  addProduitFormDeleteLink($newFormLi);

	        $('.produit-montant').unbind('change');
		    $('.produit-montant').change(function(){
		    	updateTotal(this);
			});

		    $('.produit-taxe').unbind('change');
		    $('.produit-taxe').change(function(){
		    	updateTotal(this);
			});

		    $('.produit-total').unbind('change');
		    $('.produit-total').change(function(){
		    	updateMontant(this);
			});

	    }

	    $('.remove-button').on('click', function(e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();
            // supprime l'élément li pour le formulaire de tag
            $(this).parents('li').remove();
			updatedepenseTotaux();
        });	

	    function updateTotal(element){

			var montant = $(element).parents('li').find('.produit-montant').val();
			montant = montant.replace(",", "."); 
			$(element).parents('li').find('.produit-montant').val(montant);

			var taxe = $(element).parents('li').find('.produit-taxe').val();
			taxe = taxe.replace(",", "."); 
			$(element).parents('li').find('.produit-taxe').val(taxe);

			var total = $(element).parents('li').find('.produit-total').val();
			total = total.replace(",", "."); 
			$(element).parents('li').find('.produit-total').val(total);

			if(taxe != 0){
				var total = +montant + +taxe;
				$(element).parents('li').find('.produit-total').val(total.toFixed(2));
			} else {
				$(element).parents('li').find('.produit-total').val(montant);
			}
			updatedepenseTotaux();
		};

		function updateMontant(element){

			var montant = $(element).parents('li').find('.produit-montant').val();
			montant = montant.replace(",", "."); 
			$(element).parents('li').find('.produit-montant').val(montant);

			var taxe = $(element).parents('li').find('.produit-taxe').val();
			taxe = taxe.replace(",", "."); 
			$(element).parents('li').find('.produit-taxe').val(taxe);

			var total = $(element).parents('li').find('.produit-total').val();
			total = total.replace(",", "."); 
			$(element).parents('li').find('.produit-total').val(total);

			if(taxe != 0){
				var montant = +total - +taxe;
				$(element).parents('li').find('.produit-montant').val(montant.toFixed(2));
			} else {
				$(element).parents('li').find('.produit-montant').val(total);
			}
			updatedepenseTotaux();
		};

		function updatedepenseTotaux(){
			//Sous total
			var sousTotal = 0;
			$.each($('.produit-montant'), function( index, value ) {
				var val = $(value).val();
				sousTotal = +sousTotal + +val;
			});
			var Total = 0;
			$.each($('.produit-total'), function( index, value ) {
				var val = $(value).val();
				Total = +Total + +val;
			});
			//$('.depense-sous-total').val(sousTotal.toFixed(2));
			$('.depense-total-ht').val(sousTotal.toFixed(2));
			$('.depense-total-ttc').val(Total.toFixed(2));

			var totalHT = Total - sousTotal;
			$('.depense-taxe').val(totalHT.toFixed(2));

		}

		updatedepenseTotaux();



	});
</script>
