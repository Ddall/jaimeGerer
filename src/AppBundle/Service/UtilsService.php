<?php

namespace AppBundle\Service;

use Symfony\Component\DependencyInjection\ContainerAware;
use Symfony\Component\HttpFoundation\Response;

class UtilsService extends ContainerAware {


  public function startsWith($haystack, $needle)
	{
		$length = strlen($needle);
		return (substr($haystack, 0, $length) === $needle);
	}

  public function getFirstDayOfYear($year)
  {
      return \DateTime::createFromFormat('Y-m-d', $year.'-01-01');
  }

  public function getFirstDayOfCurrentYear()
  {
      $year = date('Y');
      return \DateTime::createFromFormat('Y-m-d', $year.'-01-01');
  }

  public function intToMoney($val){
    return $val/100;
  }

  public function moneyToInt($val){
    return $val*100;
  }

  public function removeSpecialChars($string){
    $specialChars = array(
       'à', 'ä',
       'é', 'è', 'ê', 'ë',
       'ï', 'î',
       'ö', 'ô',
       'ù', 'û', 'ü',
       ' ', '-', '\'','_','&'
    );

    $normalChars = array(
       'a', 'a',
       'e', 'e', 'e', 'e',
       'i', 'i',
       'o', 'o',
       'u', 'u', 'u',
       '', '', '', '', ''
    );

    $string = str_replace($specialChars, $normalChars, $string);
    return strtolower($string);

  }

    /**
    * @return string
    */
    public function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

  /**
   * @return string
   */
    public function getMoisAsStringFR($mois){

        $arr_mois = array(
            1 => 'Janvier',
            '01' => 'Janvier',
            2 => 'Février',
            '02' => 'Février',
            3 => 'Mars',
            '03' => 'Mars',
            4 => 'Avril',
            '04' => 'Avril',
            5 => 'Mai',
            '05' => 'Mai',
            6 => 'Juin',
            '06' => 'Juin',
            7 => 'Juillet',
            '07' => 'Juillet',
            8 => 'Août',
            '08' => 'Août',
            9 => 'Septembre',
            '09' => 'Septembre',
            10 => 'Octobre',
            11 => 'Novembre',
            12 => 'Décembre'
        );
        return array_key_exists($mois, $arr_mois)?$arr_mois[$mois]:'';
    }

    /**
   * @return string
   */
    public function getTempsAsString($temps){

        $hours = floor($temps);
        $minutesDec = $temps-$hours;
        $minutes = $minutesDec*60;
        
        return str_pad($hours, 2, 0, STR_PAD_LEFT).'h'.str_pad($minutes, 2, 0, STR_PAD_LEFT);
    }

}
