<?php

namespace AppBundle\Entity\Compta;

use Doctrine\ORM\EntityRepository;

/**
 * JournalBanqueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JournalBanqueRepository extends EntityRepository
{
	public function findJournalEntier($company, $compteBancaire, $year){

		$result = $this->createQueryBuilder('j')
		->leftJoin('AppBundle\Entity\Compta\CompteComptable', 'c', 'WITH', 'j.compteComptable = c.id')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'j.mouvementBancaire = m.id')
		->where('c.company = :company')
		->andWhere('m.compteBancaire = :compteBancaire')
		->andWhere('(j.date >= :startDate and j.date <= :endDate)')
		->setParameter('startDate', $year.'-01-01')
		->setParameter('endDate', $year.'-12-31')
		->setParameter('company', $company)
		->setParameter('compteBancaire', $compteBancaire)
		->orderBy('j.id', 'DESC')
		->addOrderBy('j.debit', 'DESC')
		->getQuery()
		->getResult();

		return $result;
	}

	public function findByCompteForCompany($compteComptable, $company=null, $startDate = null, $endDate = null){

		$qb = $this->createQueryBuilder('j')
		->leftJoin('AppBundle\Entity\Compta\CompteComptable', 'c', 'WITH', 'j.compteComptable = c.id')
		->where('j.compteComptable = :compteComptable')
		->setParameter('compteComptable', $compteComptable);

		if($company){
			$qb->andWhere('c.company = :company')
			->setParameter('company', $company);
		}

		if($startDate && $endDate){
			$qb->andWhere('j.date >= :startDate and j.date <= :endDate')
					->setParameter('startDate', $startDate)
					->setParameter('endDate', $endDate);
		}

		$qb->orderBy('j.date', 'ASC')
		->addOrderBy('j.debit', 'DESC');

		$result = $qb->getQuery()
		->getResult();

		return $result;
	}

	public function findForCompany($company){

		$qb = $this->createQueryBuilder('j')
		->leftJoin('AppBundle\Entity\Compta\CompteComptable', 'c', 'WITH', 'j.compteComptable = c.id')
		->where('c.company = :company')
		->setParameter('company', $company)
		->orderBy('j.date', 'ASC')
		->addOrderBy('j.debit', 'DESC');

		$result = $qb->getQuery()
		->getResult();

		return $result;
	}

	public function findByCompanyAndYear($company, $year){

		$qb = $this->createQueryBuilder('j')
		->leftJoin('AppBundle\Entity\Compta\CompteComptable', 'c', 'WITH', 'j.compteComptable = c.id')
		->where('c.company = :company')
		->andWhere('(j.date >= :startDate and j.date <= :endDate)')
		->setParameter('startDate', $year.'-01-01')
		->setParameter('endDate', $year.'-12-31')
		->setParameter('company', $company)
		->orderBy('j.date', 'ASC')
		->addOrderBy('j.debit', 'DESC');

		$result = $qb->getQuery()
		->getResult();

		return $result;
	}

	public function findMaxLettrage($compteComptable){
		$result = $this->createQueryBuilder('j')
			->select('MAX(j.lettrage as max_lettrage')
			->where('j.compteComptable = :compteComptable')
			->setParameter('compteComptable', $compteComptable)
			->getQuery()
			->getSingleResult();

		return $result;
	}
}
