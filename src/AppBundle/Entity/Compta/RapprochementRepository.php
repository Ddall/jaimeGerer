<?php

namespace AppBundle\Entity\Compta;

use Doctrine\ORM\EntityRepository;

/**
 * RapprochementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RapprochementRepository extends EntityRepository
{

	public function findForPeriodeEncaissement($company, $mois, $annee){

		$query = $this->createQueryBuilder('r')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'm.id = r.mouvementBancaire')
		->leftJoin('AppBundle\Entity\Compta\CompteBancaire', 'c', 'WITH', 'm.compteBancaire = c.id')
		->where('c.company = :company')
		->andWhere('m.date >= :first')
		->andWhere('m.date <= :last')
		->setParameter('company', $company)
		->setParameter('first', $annee.'-'.$mois.'-01')
		->setParameter('last',  $annee.'-'.$mois.'-31');


		return $query->getQuery()->getResult();
	}

	public function findForCompany($company){

		$query = $this->createQueryBuilder('r')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'm.id = r.mouvementBancaire')
		->leftJoin('AppBundle\Entity\Compta\CompteBancaire', 'c', 'WITH', 'm.compteBancaire = c.id')
		->where('c.company = :company')
		->setParameter('company', $company);

		return $query->getQuery()->getResult();
	}

	public function findForCompanyByYear($company, $annee){

		$query = $this->createQueryBuilder('r')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'm.id = r.mouvementBancaire')
		->leftJoin('AppBundle\Entity\Compta\CompteBancaire', 'c', 'WITH', 'm.compteBancaire = c.id')
		->where('c.company = :company')
		->andWhere('m.date >= :first')
		->andWhere('m.date <= :last')
		->setParameter('company', $company)
		->setParameter('first', $annee.'-01-01')
		->setParameter('last',  $annee.'-12-31');

		return $query->getQuery()->getResult();
	}

	public function findTresoForPeriode($compteBancaire, $mois, $annee){

		$query = $this->createQueryBuilder('r')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'm.id = r.mouvementBancaire')
		->where('m.compteBancaire = :compteBancaire')
		->andWhere('m.date >= :first')
		->andWhere('m.date <= :last')
		->setParameter('compteBancaire', $compteBancaire)
		->setParameter('first', $annee.'-'.$mois.'-01')
		->setParameter('last',  $annee.'-'.$mois.'-31');

		return $query->getQuery()->getResult();
	}

	public function findTableauBord($company, $annee){

		$query = $this->createQueryBuilder('r')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'm.id = r.mouvementBancaire')
		->leftJoin('AppBundle\Entity\Compta\CompteBancaire', 'c', 'WITH', 'm.compteBancaire = c.id')
		->where('c.company = :company')
		->andWhere('m.date >= :first')
		->andWhere('m.date <= :last')
		->andWhere('m.montant < 0')
		->andWhere('r.depense IS NULL')
		->setParameter('company', $company)
		->setParameter('first', $annee.'-01-01')
		->setParameter('last',  $annee.'-12-31');

		return $query->getQuery()->getResult();
	}

	public function findTableauBordByMonth($company, $annee, $mois){

		$query = $this->createQueryBuilder('r')
		->leftJoin('AppBundle\Entity\Compta\MouvementBancaire', 'm', 'WITH', 'm.id = r.mouvementBancaire')
		->leftJoin('AppBundle\Entity\Compta\CompteBancaire', 'c', 'WITH', 'm.compteBancaire = c.id')
		->where('c.company = :company')
		->andWhere('m.date >= :first')
		->andWhere('m.date <= :last')
		->andWhere('m.montant < 0')
		->andWhere('r.depense IS NULL')
		->setParameter('company', $company)
		->setParameter('first', $annee.'-'.$mois.'-01')
		->setParameter('last',  $annee.'-'.$mois.'-31');

		return $query->getQuery()->getResult();
	}
}
