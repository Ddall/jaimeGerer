<?php

namespace AppBundle\Entity\Compta;

use Doctrine\ORM\EntityRepository;

/**
 * CompteComptableRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompteComptableRepository extends EntityRepository
{
	public function findAllNum(){
		$result = $this->createQueryBuilder('c')
		->select('c.num')
		->getQuery()
		->getResult();

		return $result;
	}

	public function findAllNumForCompany($company){
		$result = $this->createQueryBuilder('c')
		->select('c.num')
		->where('c.company = :company')
		->setParameter('company', $company)
		->getQuery()
		->getResult();

		return $result;
	}

	public function findCodes($company){
		$result = $this->createQueryBuilder('c')
		->select('c.nom')
		->where('c.company = :company')
		->setParameter('company', $company)
		->getQuery()
		->getResult();

		return $result;
	}

	public function findComptesLiesATva($company){
		$result = $this->createQueryBuilder('c')
		->where('c.company = :company')
		->andWhere('c.compteTVA is not null')
		->setParameter('company', $company)
		->getQuery()
		->getResult();

		return $result;
	}

	public function findComptesNonLiesATva($company){
		$result = $this->createQueryBuilder('c')
		->where('c.company = :company')
		->andWhere('c.compteTVA is null')
		->setParameter('company', $company)
		->getQuery()
		->getResult();

		return $result;
	}

	public function findAllByNum($num, $company){
		$result = $this->createQueryBuilder('c')
		->where('c.company = :company')
		->andWhere('c.num LIKE :num')
		->setParameter('company', $company)
		->setParameter('num', $num.'%')
		->getQuery()
		->getResult();

		return $result;
	}

	public function SearchByName($nom, $company)
	{
		$result = $this->createQueryBuilder('c')
			->where('c.company = :company')
			->andWhere('c.nom LIKE :nom')
			->setParameter('company', $company)
			->setParameter('nom', '%'.$nom.'%')
			->addOrderBy('c.nom', 'ASC')
			->getQuery()
			->getResult();

		return $result;
	}

	public function searchOneByNameAndNum($nom, $company, $num)
	{
		$result = $this->createQueryBuilder('c')
			->where('c.company = :company')
			->andWhere('c.nom LIKE :nom')
			->andWhere('c.num LIKE :num')
			->setParameter('company', $company)
			->setParameter('nom', '%'.$nom.'%')
			->setParameter('num', $num.'%')
			->getQuery()
			->getSingleResult();

		return $result;
	}

	public function findCompte401($company)
	{
		$result = $this->createQueryBuilder('c')
			->where('c.company = :company')
			->andWhere('c.num = :simple OR c.num = :aveczero')
			->setParameter('company', $company)
			->setParameter('simple', '401')
			->setParameter('aveczero', '40100000')
			->getQuery()
			->getSingleResult();

		return $result;
	}

	public function findCompte411($company)
	{
		$result = $this->createQueryBuilder('c')
			->where('c.company = :company')
			->andWhere('c.num = :simple OR c.num = :aveczero')
			->setParameter('company', $company)
			->setParameter('simple', '411')
			->setParameter('aveczero', '41100000')
			->getQuery()
			->getSingleResult();

		return $result;
	}

}
