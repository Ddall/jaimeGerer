<?php

namespace AppBundle\Entity\Compta;

use Doctrine\ORM\EntityRepository;

/**
 * JournalVenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JournalVenteRepository extends EntityRepository
{
	public function findJournalEntier($company, $year){

		$result = $this->createQueryBuilder('j')
		->leftJoin('AppBundle\Entity\CRM\DocumentPrix', 'f', 'WITH', 'j.facture = f.id')
		->leftJoin('AppBundle\Entity\CRM\Compte', 'c1', 'WITH', 'f.compte = c1.id')
		->leftJoin('AppBundle\Entity\Compta\Avoir', 'a', 'WITH', 'j.avoir = a.id')
		->leftJoin('AppBundle\Entity\CRM\DocumentPrix', 'f2', 'WITH', 'a.facture = f2.id')
		->leftJoin('AppBundle\Entity\CRM\Compte', 'c2', 'WITH', 'f2.compte = c2.id')
		->where('c1.company = :company or c2.company = :company')
		->andWhere('(f.dateCreation >= :startDate and f.dateCreation <= :endDate) or (a.dateCreation >= :startDate and a.dateCreation <= :endDate)')
		->setParameter('startDate', $year.'-01-01')
		->setParameter('endDate', $year.'-12-31')
		->setParameter('company', $company)
		->orderBy('f.dateCreation', 'DESC')
		->addOrderBy('a.dateCreation', 'DESC')
		->addOrderBy('j.facture', 'DESC')
		->addOrderBy('j.debit', 'ASC')
		->getQuery()
		->getResult();

		return $result;
	}

	public function findByCompteForCompany($compteComptable, $company, $startDate = null, $endDate = null){

		$qb = $this->createQueryBuilder('j')
			->leftJoin('AppBundle\Entity\CRM\DocumentPrix', 'f', 'WITH', 'j.facture = f.id')
			->leftJoin('AppBundle\Entity\CRM\Compte', 'c1', 'WITH', 'f.compte = c1.id')
			->leftJoin('AppBundle\Entity\Compta\Avoir', 'a', 'WITH', 'j.avoir = a.id')
			->leftJoin('AppBundle\Entity\CRM\DocumentPrix', 'f2', 'WITH', 'a.facture = f2.id')
			->leftJoin('AppBundle\Entity\CRM\Compte', 'c2', 'WITH', 'f2.compte = c2.id')
			->where('c1.company = :company or c2.company = :company')
			->andWhere('j.compteComptable = :compteComptable')
			->setParameter('company', $company)
			->setParameter('compteComptable', $compteComptable);

		if($startDate && $endDate){
			$qb->andWhere('(f.dateCreation >= :startDate and f.dateCreation <= :endDate) or (a.dateCreation >= :startDate and a.dateCreation <= :endDate)')
				->setParameter('startDate', $startDate)
				->setParameter('endDate', $endDate);
		}

		$qb->orderBy('f.num', 'ASC')
		->addOrderBy('j.debit', 'DESC');


		$result = $qb->getQuery()
		->getResult();

		return $result;
	}

	public function findCompteAttenteACorriger($compteComptable, $company){

		$queryBuilder  = $this->_em->createQueryBuilder();

		$subQueryBuilder = $this->_em->createQueryBuilder();
		$subQueryBuilder->select('od')
			->from('AppBundle\Entity\Compta\OperationDiverse', 'od')
			->where('j.facture = od.facture')
			->orWhere('j.avoir = od.avoir');

		$query = $this->createQueryBuilder('j')
		->leftJoin('AppBundle\Entity\CRM\DocumentPrix', 'f', 'WITH', 'j.facture = f.id')
		->leftJoin('AppBundle\Entity\CRM\Compte', 'c1', 'WITH', 'f.compte = c1.id')
		->leftJoin('AppBundle\Entity\Compta\Avoir', 'a', 'WITH', 'j.avoir = a.id')
		->leftJoin('AppBundle\Entity\CRM\DocumentPrix', 'f2', 'WITH', 'a.facture = f2.id')
		->leftJoin('AppBundle\Entity\CRM\Compte', 'c2', 'WITH', 'f2.compte = c2.id')
		->where('c1.company = :company or c2.company = :company')
		->andWhere('j.compteComptable = :compteComptable')
		->setParameter('company', $company)
		->setParameter('compteComptable', $compteComptable);

		$query->andWhere($queryBuilder->expr()->not($queryBuilder->expr()->exists($subQueryBuilder->getDQL())));

		$result = $query->orderBy('f.num', 'ASC')
			->addOrderBy('j.debit', 'DESC')
			->getQuery()
			->getResult();

		return $result;
	}

	public function findInverse($ligne){
		$result = $this->createQueryBuilder('j')
		->where('j.facture = :facture or j.avoir = :avoir')
		->andWhere('j.compteComptable != :compteComptable')
		->setParameter('facture', $ligne->getFacture())
		->setParameter('avoir', $ligne->getAvoir())
		->setParameter('compteComptable', $ligne->getCompteComptable())
		->getQuery()
		->getResult();

		return $result;
	}
}
