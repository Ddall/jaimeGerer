<?php

namespace AppBundle\Entity\CRM;

use Doctrine\ORM\EntityRepository;

/**
 * BonCommandeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BonCommandeRepository extends EntityRepository
{
	public function findByCompany($company){
		$qb = $this->createQueryBuilder('c')
		->leftJoin('AppBundle\Entity\CRM\Opportunite', 'o', 'WITH', 'o.id = c.actionCommerciale')
		->leftJoin('AppBundle\Entity\CRM\Compte', 'co', 'WITH', 'co.id = o.compte')
		->where('co.company = :company')
		->setParameter('company', $company);

		$result = $qb->getQuery()->getResult();
		return $result;
	}

	public function findForList($company, $length, $start, $orderBy, $dir, $search, $year){
		$qb = $this->createQueryBuilder('bc')
			->leftJoin('AppBundle\Entity\CRM\Opportunite', 'o', 'WITH', 'o.id = bc.actionCommerciale')
			->leftJoin('AppBundle\Entity\CRM\Compte', 'c', 'WITH', 'c.id = o.compte')
			->where('c.company = :company')
			->setParameter('company', $company);

		if($search != ""){
			$search = trim($search);
			$qb->andWhere('c.nom LIKE :search OR o.nom LIKE :search OR bc.num LIKE :search ')
			->setParameter('search', '%'.$search.'%');
		}

		if(strtolower($year) != "all"){
			$qb->andWhere('bc.num LIKE :year')
			->setParameter('year', $year.'%');
		}

		if($orderBy == null){
			$orderBy = 'num';
		}
		$qb->setMaxResults($length)
	        ->setFirstResult($start)
	        ->addOrderBy('bc.'.$orderBy, $dir);

		return $qb->getQuery()->getResult();
	}

	public function countForList($company, $search){
		$qb = $this->createQueryBuilder('bc')
			->select('COUNT(bc)')
			->leftJoin('AppBundle\Entity\CRM\Opportunite', 'o', 'WITH', 'o.id = bc.actionCommerciale')
			->leftJoin('AppBundle\Entity\CRM\Compte', 'c', 'WITH', 'c.id = o.compte')
			->where('c.company = :company')
			->setParameter('company', $company);

		if($search != ""){
			$search = trim($search);
			$qb->andWhere('c.nom LIKE :search OR o.nom LIKE :search OR bc.num LIKE :search ')
			->setParameter('search', '%'.$search.'%');
		}

		return $qb->getQuery()->getSingleScalarResult();
	}
}
