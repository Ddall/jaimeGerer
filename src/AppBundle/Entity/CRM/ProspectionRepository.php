<?php

namespace AppBundle\Entity\CRM;

use Doctrine\ORM\EntityRepository;

/**
 * ProspectionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProspectionRepository extends EntityRepository
{
	public function count($company){
		$result = $this->createQueryBuilder('c')
		->select('COUNT(c)')
		->where('c.company = :company')
		->setParameter('company', $company)
		->getQuery()
		->getSingleScalarResult();
	
		return $result;
	}
		
	public function findForList($company, $length, $start, $orderBy, $dir, $search){
		$qb = $this->createQueryBuilder('c')
		//~ ->select('c');
			->select('c.id', 'c.nom', 'c.dateCreation', 'u.firstname', 'u.lastname', 'r.data as nbreContacts', 'c.nbreJour')
		->leftJoin('AppBundle\Entity\User', 'u', 'WITH', 'u.id = c.userCreation')
		->leftJoin('AppBundle\Entity\CRM\Rapport', 'r', 'WITH', 'r.id = c.rapport')
		->where('c.company = :company')
		->setParameter('company', $company);
		
		if($search != ""){
			$search = trim($search);
			$qb->where('c.nom LIKE :search')
			->setParameter('search', '%'.$search.'%');
		}
		
		$qb->setMaxResults($length)
		->setFirstResult($start)
		->addOrderBy('c.'.$orderBy, $dir);
		//~ print_r(array(
    //~ 'sql'        => $qb->getQuery()->getSQL(),
    //~ 'parameters' => $qb->getQuery()->getParameters(),
//~ ));
	//~ die($qb->getQuery()->getSQL());
		return $qb->getQuery()->getResult();
	}
	
	public function countForList($company, $search){
		$qb = $this->createQueryBuilder('c')
		->select('COUNT(c)')
		->where('c.company = :company')
		->setParameter('company', $company);
	
		
		if($search != ""){
			$search = trim($search);
			$qb->where('c.nom LIKE :search')
			->setParameter('search', '%'.$search.'%');
		}
	
		return $qb->getQuery()->getSingleScalarResult();
	}
	
}
