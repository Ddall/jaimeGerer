<?php

namespace App\Entity\Compta;

use Doctrine\ORM\EntityRepository;

/**
 * OperationDiverseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OperationDiverseRepository extends EntityRepository
{
	public function findByCompteForCompany($compteComptable, $company=null, $startDate = null, $endDate = null){

		$qb = $this->createQueryBuilder('o')
		->leftJoin('App\Entity\Compta\CompteComptable', 'c', 'WITH', 'o.compteComptable = c.id')
		->where('o.compteComptable = :compteComptable')
		->setParameter('compteComptable', $compteComptable);

		if($company){
			$qb->andWhere('c.company = :company')
				->setParameter('company', $company);
		}

		if($startDate && $endDate){
			$qb->andWhere('o.date >= :startDate and o.date <= :endDate')
					->setParameter('startDate', $startDate)
					->setParameter('endDate', $endDate);
		}

		$qb->orderBy('o.date', 'DESC')
		->addOrderBy('o.debit', 'DESC');

		$result = $qb	->getQuery()
		->getResult();

		return $result;
	}

	public function findForCompany($company){

		$result = $this->createQueryBuilder('o')
		->leftJoin('App\Entity\Compta\CompteComptable', 'c', 'WITH', 'o.compteComptable = c.id')
		->where('c.company = :company')
		->setParameter('company', $company)
		->orderBy('o.date', 'DESC')
		->addOrderBy('o.debit', 'DESC')
		->getQuery()
		->getResult();

		return $result;
	}

	public function findNonLettreesByCompanyAndYear($company, $year){

		$result = $this->createQueryBuilder('o')
		->leftJoin('App\Entity\Compta\CompteComptable', 'c', 'WITH', 'o.compteComptable = c.id')
		->where('c.company = :company')
		->andWhere('(o.date >= :startDate and o.date <= :endDate)')
		->andWhere('o.lettrage IS NULL')
		->andWhere('c.num LIKE :fournisseur or c.num LIKE :client')
		->setParameter('startDate', $year.'-01-01')
		->setParameter('endDate', $year.'-12-31')
		->setParameter('company', $company)
		->setParameter('fournisseur', '401%')
		->setParameter('client', '411%')
		->setParameter('company', $company)
		->orderBy('o.date', 'DESC')
		->addOrderBy('o.debit', 'DESC')
		->getQuery()
		->getResult();

		return $result;
	}

	public function findJournalEntier($company, $year){

		$result = $this->createQueryBuilder('j')
			->leftJoin('App\Entity\Compta\CompteComptable', 'c', 'WITH', 'j.compteComptable = c.id')
			->where('c.company = :company')
			->andWhere('j.date >= :startDate and j.date <= :endDate')
			->setParameter('startDate', $year.'-01-01')
			->setParameter('endDate', $year.'-12-31')
			->setParameter('company', $company)
			->addOrderBy('j.date', 'DESC')
			->addOrderBy('j.debit', 'ASC')
			->getQuery()
			->getResult();

		return $result;
	}
}
