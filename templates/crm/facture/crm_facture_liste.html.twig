{% extends 'crm/crm_layout.html.twig' %}
{% set filterDateNone   = constant('App\\Controller\\CRM\\FactureController::FILTER_DATE_NONE') %}
{% set filterDateMonth  = constant('App\\Controller\\CRM\\FactureController::FILTER_DATE_MONTH') %}
{% set filterDate2Month = constant('App\\Controller\\CRM\\FactureController::FILTER_DATE_2MONTH') %}
{% set filterDateYear   = constant('App\\Controller\\CRM\\FactureController::FILTER_DATE_YEAR') %}
{% set filterDateCustom = constant('App\\Controller\\CRM\\FactureController::FILTER_DATE_CUSTOM') %}
{% block content %}
	<div class="row">
		<div class="col-md-12">
			<h1>{{ titre_page }}</h1>
		</div>
	</div>

	<div  class="row well">
		<div class="col-md-3">
			{#<label class="control-label" for="filter_date">Afficher les devis</label>#}
			{#<select class="form-control" id="filter_date">#}
			{#<option value="{{ filterDateNone }}">tous</option>#}
			{#<option value="{{ filterDateMonth }}">du mois en cours</option>#}
			{#<option value="{{ filterDate2Month }}">des deux derniers mois</option>#}
			{#<option value="{{ filterDateYear }}">de l'année en cours</option>#}
			{#<option value="{{ filterDateCustom }}">choisir une période...</option>#}
			{#</select>#}
			<input type="radio" name="filter_date" id="all" class="filter_date" value="{{ filterDateNone }}"
				   checked />
			<label for="all">Tous</label><br />
			<input type="radio" name="filter_date" id="month" class="filter_date" value="{{ filterDateMonth }}" />
			<label for="month">Du mois en cours</label><br />
			<input type="radio" name="filter_date" id="2month" class="filter_date" value="{{ filterDate2Month }}" />
			<label for="2month">Des deux derniers mois</label>
		</div>
		<div class="col-md-3">
			<input type="radio" name="filter_date" id="year" class="filter_date" value="{{ filterDateYear }}" />
			<label for="year">De l'année en cours</label><br />
			<input type="radio" name="filter_date" id="custom" class="filter_date" value="{{ filterDateCustom }}" />
			<label for="custom">Choisir une période...</label><br />
		</div>
		<div id="filter_dates">
			<div class="row">
				<div class="col-md-3">
					<label class="control-label" for="start_date">Du </label>
					<input type="text" name="start_date" id="start_date" class="form-control" />
					<input type="hidden" name="start_date_db" id="start_date_db" />
				</div>
				<div class="col-md-3">
					<label class="control-label" for="end_date">Au </label>
					<input type="text" name="end_date" id="end_date" class="form-control" />
					<input type="hidden" name="end_date_db" id="end_date_db" />
				</div>
			</div>
			<div class="row">
				<div class="col-md-6">&nbsp;</div>
				<div class="col-md-6" id="error_dates">
					La date de fin doit être supérieure ou égale à la date de début
				</div>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-md-12">
			<p>
				<a target='_blank' href="{{ path('crm_facture_ajouter') }}" class="btn btn-success">
					<span class="glyphicon glyphicon-plus"></span> Ajouter
				</a>

				<a target='_blank' href="{{ path('crm_facture_export_evoliz') }}" class="btn btn-info"  data-toggle="modal" data-target="#modal">
					<span class=" glyphicon glyphicon-export"></span> Export
				</a>
			</p>
		</div>
	</div>

	<div class="row">
		<div class="col-md-12">
			<table id="table_facture_list" class="table table-bordered table-striped">
				<thead>
				<tr>
					<th>Objet</th>
					<th>Numéro de facture</th>
					<th>Bons de commande</th>
					<th>Organisation</th>
					<th>Total</th>
					<th>Date de création</th>
					<th>Etat</th>
					<th>Actions</th>
				</tr>
				</thead>
			</table>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script type="text/javascript">
		function dateChange(table) {
			var startDate = $('#start_date_db');
			var endDate = $('#end_date_db');
			var errorMessage = $('#error_dates');
			errorMessage.hide();
			if ($('input[name=filter_date]:radio:checked').val() != {{ filterDateCustom }} ||
					startDate.val() == '' ||
					endDate.val() == '') {
				return;
			}
			if (startDate.val() > endDate.val()) {
				errorMessage.show();
				return;
			}

			table.ajax.reload();

		}

		$(document).ready( function () {
			var table = $('#table_facture_list').DataTable({
				"dom": 'T<"clear">lfrtip',
				"oTableTools": {
					"sSwfPath": "/web/lib/datatables/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
					"aButtons": [
						{
							"sExtends": "csv",
							"sButtonText": "Excel",
							"mColumns": [ 0, 1, 2, 3 ],
							"sFileName": "factures.csv"
						},
						{
							"sExtends": "pdf",
							"sButtonText": "PDF",
							"mColumns": [ 0, 1, 2, 3 ],
							"sFileName": "factures.pdf",
							"sTitle": "Comptes"
						},

					]
				},
				"iDisplayLength": 100,
				"language" : {
					"url": "//cdn.datatables.net/plug-ins/1.10.7/i18n/French.json"
				},
				"order": [[ 1, "desc" ]],
				"responsive": true,
				"processing": true,
				"serverSide": true,
				"ajax":{
					url :"{{ ajax_url }}", // json datasource
					type: "get",  // method  , by default get
					data: function ( d ) {
						d.date_search = $('input[name=filter_date]:radio:checked').val();
						d.start_date = $('#start_date_db').val();
						d.end_date = $('#end_date_db').val();
					}
				},
				"columns": [
					{ "data": "objet" },
					{ "data": "num" },
					{ "data": "bon_commande" },
					{ "data": "compte_nom" },
					{ "data": "totaux" },
					{ "data": "dateCreation" },
					{ "data": "etat" },
				],
				fnDrawCallback: function () {
					$( 'a', this.fnGetNodes() ).tooltip( {
						"delay": 0,
						"track": true,
						"fade": 250,
						"tooltipClass": 'btn btn-default',
					} );
					$( 'a.not-active', this.fnGetNodes() ).tooltip( {
						"delay": 0,
						"track": true,
						"fade": 250,
						"tooltipClass": 'btn btn-default',
					} );
				},
				fnInitComplete: function () {
					$( 'a', this.fnGetNodes() ).tooltip( {
						"delay": 0,
						"track": true,
						"fade": 250,
						"tooltipClass": 'btn btn-default',
					} );
					$( 'a.not-active', this.fnGetNodes() ).tooltip( {
						"delay": 0,
						"track": true,
						"fade": 250,
						"tooltipClass": 'btn btn-default',
					} );
				},
				"columnDefs": [
					{
						// The `data` parameter refers to the data for the cell (defined by the
						// `data` option, which defaults to the column being worked with, in
						// this case `data: 0`.
						"render": function ( data, type, row ) {
							var url = Routing.generate('crm_facture_voir', {'id' : row['id']});
							var s = '<a target="_blank" href="'+url+'">'+data+'</a>';
							if (row['avoir'] != null) {
                                s += "<br /><span class='s glyphicon glyphicon-scissors'></span> <span class='s'>Avoir " + row['avoir'] + "</span>";
                            };
                            return s;
							
						},
						"targets": 0
					},
					{
						// The `data` parameter refers to the data for the cell (defined by the
						// `data` option, which defaults to the column being worked with, in
						// this case `data: 0`.
						"render": function ( data, type, row ) {
							var voirUrl = Routing.generate('crm_facture_voir', {'id' : row['id']});
							var editerUrl = Routing.generate('crm_facture_editer', {'id' : row['id']});
							var supprimerUrl = Routing.generate('crm_facture_supprimer', {'id' : row['id']});
							var exporterUrl = Routing.generate('crm_facture_exporter', {'id' : row['id']});
							var dupliquerUrl = Routing.generate('crm_facture_dupliquer', {'id' : row['id']});

							var s = "<p><a target='_blank' href='"+voirUrl+"'' class=\"btn btn-xs btn-info\" ​data-toggle=\"tooltip-btn-xs\" title=\"Voir\"><span class=\"glyphicon glyphicon-eye-open\"></span></a>" +" "+
									"<a target='_blank' href='"+editerUrl+"' class=\"btn btn-xs btn-warning\" ​data-toggle=\"tooltip-btn-xs\" title=\"Editer\"><span class=\"glyphicon glyphicon-pencil\"></span></a>"+" ";

							if(row['num_ecriture'] == "{{ lastNumEcriture }}"){
								s+="<a target='_blank' href='"+supprimerUrl+"' class=\"btn btn-xs btn-danger\" ​data-toggle=\"tooltip-btn-xs\" title=\"Supprimer\"><span class=\"glyphicon glyphicon-trash\"></span></a>";
							} else {
								s+="<a href=\"#\" class=\"btn btn-xs btn-default not-active\"><span class=\"glyphicon glyphicon-trash\"></span>";
							}
							s+="</p><p><a target='_blank' href='"+exporterUrl+"' class=\"btn btn-xs btn-primary\" ​data-toggle=\"tooltip-btn-xs\" title=\"Exporter\"><span class=\"glyphicon glyphicon-floppy-disk\"></span></a>"+" "+
									"<a target='_blank' href='"+dupliquerUrl+"' class=\"btn btn-xs btn-primary\" ​data-toggle=\"tooltip-btn-xs\" title=\"Dupliquer\"><span class=\"glyphicon glyphicon-duplicate\"></span></a></p>";

							return s;
						},
						"targets": 7
					},
					{ "visible": false,  "targets": [ 'id' ] },
					{
						"render": function ( data, type, row ) {
							var s= data.HT+" € HT"+"<br />"+
									"<i>"+data.TTC+" € TTC </i>";

							return s;
						},
						"targets": 4
					},
					{
						"render": function ( data, type, row ) {

							var s ="";
							if(data == ""){
								s = "Inconnu";
							} else if(data == "PAID") {
								s = "Payée";
							} else {
								s = data;
							}

							return s;
						},
						"targets": 6
					},
					{
						"render": function ( data, type, row ) {
							var d = data.date;
							var arr = d.split("-");
							var y = arr[0];
							var m = arr[1];
							var arrj = arr[2].split(" ");
							var j = arrj[0];
							var res = j+"/"+m+"/"+y;
							return res;
						},
						"targets": 5
					},
					{
						"render": function ( data, type, row ) {
							var voirUrl = Routing.generate('crm_facture_voir', {'id' : row['id']});
							return '<a target="_blank" href="'+voirUrl+'">'+data+'</a>';
						},
						"targets": 3
					},
				]
			});
			$('.filter_date').change(function() {
				var filterDates = $('#filter_dates');

				if ($('input[name=filter_date]:radio:checked').val() == {{ filterDateCustom }}) {
					filterDates.show();
					return;
				}
				filterDates.hide();
				table.ajax.reload();
			});
			$('#start_date').datepicker({
				altField: "#start_date_db",
				altFormat: "yy-mm-dd"
			}).on("change", function() {
				dateChange(table);
			});
			$('#end_date').datepicker({
				altField: "#end_date_db",
				altFormat: "yy-mm-dd"
			}).on("change", function() {
				dateChange(table);
			});

			$('#filter_dates').hide();
			$('#error_dates').hide();

		});
	</script>
{% endblock %}
